initializing...

starting main loop...

line:  2   char:  1   token: and
line:  2   char: 11   token: array
line:  2   char: 21   token: begin
line:  2   char: 31   token: Boolean
line:  2   char: 41   token: Char
line:  3   char:  1   token: class
line:  3   char: 11   token: const
line:  3   char: 21   token: declare
line:  3   char: 31   token: else
line:  3   char: 41   token: elsif
line:  4   char:  1   token: end
line:  4   char: 11   token: exit
line:  4   char: 21   token: false
line:  4   char: 31   token: for
line:  4   char: 41   token: function
line:  5   char:  1   token: if
line:  5   char: 11   token: in
line:  5   char: 21   token: is
line:  5   char: 31   token: Integer
line:  5   char: 41   token: loop
line:  6   char:  1   token: mod
line:  6   char: 11   token: not
line:  6   char: 21   token: of
line:  6   char: 31   token: or
line:  6   char: 41   token: private
line:  7   char:  1   token: procedure
line:  7   char: 11   token: program
line:  7   char: 21   token: protected
line:  7   char: 31   token: public
line:  7   char: 41   token: read
line:  8   char:  1   token: readln
line:  8   char: 11   token: return
line:  8   char: 21   token: String
line:  8   char: 31   token: then
line:  8   char: 41   token: true
line:  9   char:  1   token: type
line:  9   char: 11   token: var
line:  9   char: 21   token: when
line:  9   char: 31   token: while
line:  9   char: 41   token: write
line: 10   char:  1   token: writeln
line: 13   char:  1   token: +
line: 13   char:  6   token: -
line: 13   char: 11   token: *
line: 13   char: 16   token: /
line: 16   char:  1   token: =
line: 16   char:  5   token: !=
line: 16   char: 10   token: <
line: 16   char: 14   token: <=
line: 16   char: 19   token: >
line: 16   char: 23   token: >=
line: 19   char:  1   token: :=
line: 19   char:  6   token: (
line: 19   char: 10   token: )
line: 19   char: 14   token: [
line: 19   char: 18   token: ]
line: 19   char: 22   token: ,
line: 19   char: 26   token: :
line: 19   char: 30   token: ;
line: 19   char: 34   token: .
line: 22   char:  1   token: Identifier -> x
line: 22   char:  5   token: Identifier -> y
line: 22   char:  9   token: Identifier -> x1
line: 22   char: 14   token: Identifier -> i
line: 22   char: 18   token: Identifier -> aVeryLongIdentifier
line: 23   char:  1   token: Integer Literal -> 1
line: 23   char:  5   token: Integer Literal -> 0
line: 23   char:  9   token: Integer Literal -> 10
line: 23   char: 13   token: Integer Literal -> 123456789
line: 24   char:  1   token: Character Literal -> 'a'
line: 24   char:  7   token: Character Literal -> 'x'
line: 24   char: 13   token: Character Literal -> '\"'
line: 24   char: 20   token: Character Literal -> '\''
line: 25   char:  1   token: String Literal -> "a"
line: 25   char:  7   token: String Literal -> "a longer string"
line: 25   char: 27   token: String Literal -> "yet a longer string with a quote (\") in the middle"
line: 28   char:  1   token: End-of-File

...done
